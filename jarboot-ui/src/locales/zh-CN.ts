// src/locales/zh-CN.js
export default {
    'navbar.lang': 'English',

    //Tab标题
    SERVICES_MGR: '服务管理',
    ONLINE_DEBUG: '在线诊断',
    AUTH_CONTROL: '权限控制',
    PLUGINS: '插件',
    SETTING: '设置',
    ABOUT: '关于',
    MENU_DOCS: '文档',

    //服务管理
    ONE_KEY_START: '一键启动',
    ONE_KEY_STOP: '一键停止',
    ONE_KEY_RESTART: '一键重启',
    START: '启动',
    STOP: '停止',
    RESTART: '重启',
    UPLOAD_NEW: '上传或新增',
    NAME: '名字',
    STATUS: '状态',
    CLEAR: '清空',
    CLOSE: '关闭',
    GROUP: '组',
    TREE_VIEW: '树',
    LIST_VIEW: '列表',
    CONSOLE_VIEW: '控制台',
    SERVICES_CONF: '配置',
    GROUP_PLACEHOLDER: '输入分组名，便于管理',
    CMD_PLACEHOLDER: '输入调试命令执行',
    SELECT_UPLOAD_SERVER_TITLE: '输入要更新或新增的服务的名称',
    UPLOAD_STAGE_TITLE: '上传{server}文件',
    UPLOAD_TIPS: '点击或拖拽文件到此区域上传',
    FILE_SIZE_OVER_TIPS: '文件大小必须小于{size}',
    COMMAND_PLACEHOLDER: '输入命令，示例：help',
    MORE_SETTING_INFO: '更多的配置信息，请到服务配置页面。',
    UPLOAD_ERROR: '更新服务失败！',
    UPLOAD_SUCCESS: '成功更新服务！',
    UPLOAD_HINT: '支持单个或批量上传。',
    DELETE_INFO: '该操作将会彻底删除服务的相关信息，是否继续？',
    UPLOAD_DESC: '点击或拖拽文件到此区域上传',
    LOCAL: '本地',
    REMOTE: '远程',
    DEFAULT_GROUP: '默认组',
    DETACH_MSG: 'Detach将断开远程连接，断开后将从列表中移除，是否继续？',
    //进程状态
    RUNNING: '运行中',
    STOPPED: '已停止',
    STARTING: '启动中',
    STOPPING: '停止中',

    //通用
    TYPE: '类型',
    SUBMIT_BTN: '提交',
    RESET_BTN: '重置',
    SEARCH_BTN: '搜索',
    FILTER_BTN: '过滤',
    REFRESH_BTN: '刷新',
    NEXT_BTN: '下一步',
    DASHBOARD: '仪表盘',
    SERVER_EMPTY: '当前工作空间下未搜索到服务。',
    MODIFY: '修改',
    DELETE: '删除',
    CREATE: '新增',
    SUCCESS: '成功！',
    LOADING: '加载中...',
    SUBMITTING: '提交中...',
    WARN: '警告',
    CANCEL: '取消',
    EXPORT: '导出',
    IMPORT: '导入',
    IMPORT_INFO: `导入的服务{name}已经存在，是否覆盖？`,
    UPLOAD_INFO: `上传更新{name}前是否备份服务，以便部署出错后恢复？`,
    START_UPLOAD_INFO: `开始上传文件{name}...`,
    TRUSTED_SUCCESS: '获取授权成功！',
    UNTRUSTED_MODEL_BODY: `未知的远程主机{host}，是否信任？`,
    TRUST_ONCE: '信任一次',
    TRUST_ALWAYS: '始终信任',
    TEXT_WRAP: '自动换行',
    AUTO_SCROLL_END: '自动滚动到底部',
    SCROLL_TO_TOP: '滚动到顶部',

    //服务配置
    SERVER_LIST_TITLE: '服务列表',
    COMMAND_LABEL: '启动命令',
    VM_OPT_LABEL: 'VM参数',
    MAIN_ARGS_LABEL: '程序传入参数',
    WORK_HOME_LABEL: '工作目录',
    ENV_LABEL: '环境变量',
    PRIORITY_LABEL: '启动优先级',
    DAEMON_LABEL: '进程守护',
    JAR_UPDATE_WATCH_LABEL: '文件路径监控',
    COMMAND_EXAMPLE: "示例： 1) -jar xx.jar    2) MainClassName    3) -cp xx.jar *.*.MainClass mainMethod    4) -classpath **.jar *.*ClassName",

    //插件
    PLUGIN_UPLOAD_TITLE: '上传插件',
    PLUGIN_FILE: '文件',
    UPLOAD_BUTTON: '点击上传',

    //全局配置
    SYSTEM_SETTING: '系统设置',
    SERVERS_PATH: '工作空间',
    DEFAULT_VM_OPT: '默认的VM参数',
    AUTO_START_AFTER_INIT: 'jarboot启动后自动启动服务',
    TRUSTED_HOSTS: '信任的服务器',
    EMPTY_INPUT_MSG: "输入的内容为空！",
    DELETE_HOST_MSG: "是否要删除信任的服务器？",

    //用户登录
    USER_NAME: '用户',
    PASSWORD: '密码',
    LOGIN: '登录',
    MODIFY_PWD: '修改密码',
    CREATE_USER: '创建用户',
    SIGN_OUT: '退出',
    INTERNAL_SYS_TIP: `内部系统，不可暴露到公网`,
    INTERNAL_SYS_TIP1: ` `,
    REPEAT_PASSWORD: '请输入确认密码',
    INPUT_PASSWORD: '请输入密码',
    INPUT_USERNAME: '请输入用户名',
    INPUT_ROLE: '请输入角色',
    PWD_NOT_MATCH: '两次输入密码不一致!',
    USER_LIST: '用户列表',
    ROLE_MGR: '角色管理',
    PRIVILEGE_MGR: '权限管理',
    ROLE: '角色',
    BIND_ROLE: '绑定角色',
    DELETE_USER: `是否要删除该用户({user})？`,
    DELETE_ROLE: `是否要删除该角色？`,
    CAN_NOT_REMOVE_SELF: '不可以删除当前登录的用户！',
    PERMISSION_CONTROL_TITLE: `访问权限控制`,

    //交互提示信息
    SELECT_ONE_SERVER_INFO: '请选择一个服务后操作',
    NAME_NOT_EMPTY: `名字不能为空`,
    UPLOAD_FILE_EMPTY: `成功上传的文件为空`,
    SELECT_ONE_OP: '请选择要操作的项',
    COMMAND_RUNNING: '正在执行命令："{command}"，请先停止命令再执行',

    //帮助
    HELP: '帮助',
    QUICK_START: '快速开始',
    ABOUT_TEXT: 'Jarboot 是一个Java进程启动、调试、诊断的平台，可以管理、监控及诊断运行的的Java进程。',
    //快速开始
    QUICK_START_P1: `项目主页：{github}或者Gitee镜像仓库`,
    QUICK_START_P2: `当你进入到这个界面时，说明你已经搭建并启动好了Jarboot，接下来你要做的是将你自己开发的jar文件放入到约定到目录下。在未做任何配置的默认情况下，在jarboot的目录下创建一个名为{dir}文件夹，作为服务的根目录。在此根目录下，创建的子文件夹的名称即为服务的名称，在子文件下放入要启动的jar文件。`,
    QUICK_START_P3: `默认的目录结构：`,
    QUICK_START_P4: `可以通过{key1}界面中的{key2}修改默认的目录。可以在{key3}界面中的{key4}设定启动命令。`,
    QUICK_START_P5: `到{key}界面启动服务。`,
    QUICK_START_P6: `点击对应的按钮即可一键完成所有服务的启动与停止。`,
    QUICK_START_P7: `也可以选择一个或若干个服务后，点击对应的按钮启动与停止选择的服务。`,
    QUICK_START_P8: `刷新服务列表，更新服务数量与状态。`,
    //设置
    SETTING_P1: `通用配置`,
    SETTING_P2: `：服务默认根目录设置，可以更改默认的服务根目录位置，默认情况下为jarboot下的services目录。`,
    SETTING_P3: `：当服务没有设定JVM的启动参数时，会使用该默认的全局配置。`,
    SETTING_P4: `：jarboot-server启动后是否自动启动其所管理的服务。`,
    SETTING_P6: `：配置Java进程的启动命令。`,
    SETTING_P7: `：指定服务启动时的JVM参数，比如内存大小、垃圾收集器等。`,
    SETTING_P8: `：启动的参数，即传给Main入口函数的参数。`,
    SETTING_P9: `：启动的优先级，值越大的先启动，值相同的并行启动，会等待前一级别的服务先启动完成才会进行下一等级的启动。服务关闭时则按照相反的顺序依次停止。`,
    SETTING_P10: `：指定该服务是否需要守护，如果开启了守护，则当该服务异常关闭时jarboot会自动将它重新启动。`,
    SETTING_P11: `：指定是否监控服务目录的更新，开启后，如果监控到服务目录下的文件有更新，会自动重启服务。如果一段时间内更新了很多次，则只会在最后重启依次（防抖动设计）。`,
};
