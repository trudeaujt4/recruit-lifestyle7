<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>jarboot-all</artifactId>
		<groupId>io.github.majianzheng</groupId>
		<version>${revision}</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<artifactId>jarboot-server</artifactId>
	<name>Jarboot server</name>
	<description>jarboot server</description>
	<packaging>jar</packaging>
	<properties>
		<maven.install.skip>true</maven.install.skip>
		<maven.deploy.skip>true</maven.deploy.skip>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<scope>runtime</scope>
		</dependency>
        <dependency>
            <groupId>io.github.majianzheng</groupId>
            <artifactId>jarboot-common</artifactId>
        </dependency>
		<dependency>
			<groupId>io.github.majianzheng</groupId>
			<artifactId>jarboot-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
	</dependencies>

	<build>
		<finalName>jarboot-server</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<layout>ZIP</layout>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>release</id>
			<properties>
				<maven.install.skip>true</maven.install.skip>
				<maven.deploy.skip>true</maven.deploy.skip>
			</properties>
			<build>
				<plugins>
					<!-- 打包前，编译jarboot-ui前端代码并部署到static下 -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<!-- 先安装或更新依赖 -->
							<execution>
								<id>jarboot-ui-init</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>yarn</executable>
									<workingDirectory>../jarboot-ui</workingDirectory>
									<arguments>
										<argument>install</argument>
									</arguments>
								</configuration>
							</execution>
							<!-- 执行编译，会自动将编译输出部署到static下 -->
							<execution>
								<id>compile-jarboot-ui</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>yarn</executable>
									<workingDirectory>../jarboot-ui</workingDirectory>
									<arguments>
										<argument>build</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
